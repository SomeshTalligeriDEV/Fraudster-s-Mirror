// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Document Forgery Detection AI agent.
 *
 * - detectDocumentForgery - A function that handles the document forgery detection process.
 * - DetectDocumentForgeryInput - The input type for the detectDocumentForgery function.
 * - DetectDocumentForgeryOutput - The return type for the detectDocumentForgery function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const DetectDocumentForgeryInputSchema = z.object({
  documentDataUri: z
    .string()
    .describe(
      "A document to check for forgeries, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
});
export type DetectDocumentForgeryInput = z.infer<typeof DetectDocumentForgeryInputSchema>;

const DetectDocumentForgeryOutputSchema = z.object({
  forgerySuspected: z
    .boolean()
    .describe('Whether or not the document is suspected of being a forgery.'),
  missingFields: z.array(z.string()).describe('List of missing fields in the document.'),
  textManipulation: z.boolean().describe('Whether or not the text has been manipulated.'),
  reason: z.string().optional().describe('The reason for the forgery suspicion, if any.'),
});
export type DetectDocumentForgeryOutput = z.infer<typeof DetectDocumentForgeryOutputSchema>;

export async function detectDocumentForgery(
  input: DetectDocumentForgeryInput
): Promise<DetectDocumentForgeryOutput> {
  return detectDocumentForgeryFlow(input);
}

const detectDocumentForgeryPrompt = ai.definePrompt({
  name: 'detectDocumentForgeryPrompt',
  input: {schema: DetectDocumentForgeryInputSchema},
  output: {schema: DetectDocumentForgeryOutputSchema},
  prompt: `You are an expert document forgery detection specialist.

You will use this information to analyze the document, and look for signs of forgery, missing fields, and text manipulation. You will then set the forgerySuspected, missingFields, and textManipulation output fields appropriately. Provide a detailed explanation for your reasoning in the reason field.

Analyze the following document:
{{media url=documentDataUri}}`,
});

const detectDocumentForgeryFlow = ai.defineFlow(
  {
    name: 'detectDocumentForgeryFlow',
    inputSchema: DetectDocumentForgeryInputSchema,
    outputSchema: DetectDocumentForgeryOutputSchema,
  },
  async input => {
    const {output} = await detectDocumentForgeryPrompt(input);
    return output!;
  }
);
